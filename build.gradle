group 'apptricity'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
    }
}

//
// BUILD_NUMBER - Comes from Jenkins or you can add it manually 'gradlew -PBUILD_NUMBER=xx buildForInsert'
//
if (!project.hasProperty('BUILD_NUMBER')) {
    version = "0.1-SNAPSHOT"
} else {
    version = "1.${BUILD_NUMBER}"
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'eric-kamradt-server'
}

//
// Use the maven repository for the following dependencies.
//
repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile group: "org.springframework.boot", name: "spring-boot-starter-web", version: "1.3.3.RELEASE"
    compile group: "org.springframework.boot", name: "spring-boot-starter", version: "1.3.3.RELEASE"
    compile group: "org.springframework.boot", name: "spring-boot-starter-data-rest", version: "1.3.3.RELEASE"
    compile group: "org.springframework.boot", name: "spring-boot-starter-data-jpa", version: "1.3.3.RELEASE"

    // compile group: 'javax.persistence', name: 'com.springsource.javax.persistence', version: '2.0.0'
    // compile group: 'javax.persistence', name: 'persistence-api', version: '1.0.2'
    // compile group: 'org.hibernate.javax.persistence', name: 'hibernate-jpa-2.1-api', version: '1.0.0.Final'

    compile group: 'com.h2database', name: 'h2', version: '1.4.187'

    // compile group: 'com.mysema.querydsl', name: 'querydsl-jpa', version: '3.7.2'
    // compile group: 'com.mysema.querydsl', name: 'querydsl-core', version: '3.7.2'
    // compile group: 'com.mysema.querydsl', name: 'querydsl-apt', version: '3.7.2'
    //
    // testCompile group: 'org.kubek2k', name: 'springockito', version: '1.0.9'
    // testCompile group: 'org.kubek2k', name: 'springockito-annotations', version: '1.0.9'

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.3.0'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.3.3.RELEASE'
    testCompile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'

    testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.1'
    testCompile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7.1'
    //testCompile group: 'org.springframework', name: 'spring-test', version: '4.2.5.RELEASE'
    testCompile group: 'org.codehaus.groovy', name: 'groovy', version: '2.4.6'
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // testCompile group: 'org.gebish', name: 'geb-spock', version: '0.13.1'
    // testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.0-groovy-2.4'
    // testCompile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
}

//configurations {
//    queryDslTool
//}
//
//task generateSources {
//    def queryDslDir = new File(buildDir, 'generated-sources/java')
//    sourceSets.main.java.srcDirs += queryDslDir
//    inputs.files(sourceSets.main.java.srcDirs)
//    outputs.dir(queryDslDir)
//    doLast {
//        if (!queryDslDir.exists()) {
//            queryDslDir.mkdirs()
//        }
//        def classPathStr = (configurations.queryDslTool + sourceSets.main.runtimeClasspath).asPath
//        ant {
//
//            javac(classpath: classPathStr, includes: 'com/apptricity/**', includeantruntime: false) {
//                sourceSets.main.java.srcDirs.each {
//                    if (it != queryDslDir) {
//                        src(path: it.path)
//                    }
//                }
//                compilerarg value: '-proc:only'
//                compilerarg value: '-processor'
//                compilerarg value: "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
//                // compilerarg value:  'org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor'
//                // compilerarg value:  'com.mysema.query.apt.QuerydslAnnotationProcessor'
//                compilerarg value: '-s'
//                compilerarg value: queryDslDir.path
//            }
//            echo(message: 'Generated QueryDSL Helpers')
//        }
//    }
//}
//
//compileJava.dependsOn generateSources

// ===========================================================================================

//test {
//    testLogging {
//        // Make sure output from
//        // standard out or error is shown
//        // in Gradle output.
//        showStandardStreams = true
//        // Or we use events method:
//        // events 'standard_out', 'standard_error'
//        // Or set property events:
//        // events = ['standard_out', 'standard_error']
//
//        // Instead of string values we can
//        // use enum values:
//        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
//        //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
//    }
//}

//
// We use the Gradle Wrapper
//
task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}
